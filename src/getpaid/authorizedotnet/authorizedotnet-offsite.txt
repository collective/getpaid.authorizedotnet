Functional browser tests for authorize.net Checkout processor.

General configuration
=====================

Create an admin user for managing the site:

    >>> membership = self.portal.portal_membership
    >>> membership.addMember('admin', 'secret', ['Member', 'Manager'], [])

Create the browser object we'll be using:

    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> browser.handleErrors = False

Login as the site admin user:

    >>> browser.open(portal.absolute_url())
    >>> browser.getLink('Log in').click()
    >>> browser.getControl('Login Name').value = 'admin'
    >>> browser.getControl('Password').value = 'secret'
    >>> browser.getControl('Log in').click()

General configuration of GetPaid:

    >>> browser.getLink('Site Setup').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Content Types').click()
    >>> from getpaid.nmi.tests.utils import setSelectWidget
    >>> setSelectWidget(browser, 'form.buyable_types', ['Page'])
    >>> browser.getControl('Apply').click()

Make the site front page buyable so that we have something to add to
the shopping cart for testing:

    >>> browser.getLink('Home').click()
    >>> browser.getLink('Make Buyable').click()
    >>> browser.getControl(name='form.product_code').value = '1234-ADSF'
    >>> browser.getControl(name='form.price').value = '10.00'
    >>> browser.getControl('Activate').click()

Off-site authorize.net Checkout processor configuration
=======================================================

Configure GetPaid to use Off-site authorize.net Checkout (and allow anonymous checkouts):

    >>> browser.getLink('Site Setup').click()
    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Payment Options').click()
    >>> setSelectWidget(browser, 'form.offsite_payment_processors', ['Off-site authorize.net Checkout'])
    >>> browser.getControl(name='form.allow_anonymous_checkout').value = 'on'
    >>> browser.getControl('Apply').click()

Configure Off-site authorize.net Checkout processor:

    >>> browser.getLink('GetPaid').click()
    >>> browser.getLink('Payment Processor Settings').click()
    >>> browser.getControl(name="form.getpaid.authorizedotnet.offsite_processor.server_url").value = ['Test']
    >>> browser.getControl(name="form.getpaid.authorizedotnet.offsite_processor.merchant_id").value = '1234567890'
    >>> browser.getControl(
    ...     name="form.getpaid.authorizedotnet.offsite_processor.merchant_key").value = 'HsYXFoZfHAqyLcCRYeH8qQ'
    >>> browser.getControl('Apply').click()

Finished with the configuration so we can now log out:

    >>> browser.getLink('Log out').click()


Checkout process
================

Visit the home page and add to the cart:

    >>> browser.getLink('Home').click()
    >>> browser.getControl('Add to Cart').click()

Which renders the populated cart for the visitor with a NMI
Checkout button:

    >>> print browser.contents
    <!DOCTYPE html ...
    ...<h3>Your Shopping Cart</h3>...
    ...<th>Total</th><td>10.00</td>...
    ...<form action="https://test.authorize.net:443/gateway/transact.dll"
             method="post" 
             enctype="multipart/form-data">
       ...
       </form>...

The cart portlet also uses the NMI Checkout button:

    >>> print browser.contents
    <!DOCTYPE html ...
    ...<dl class="portlet" id="portlet-cart">
         ...
         <dd class="portletFooter">
    ...<form action="https://test.authorize.net:443/gateway/transact.dll"
             method="post" 
             enctype="multipart/form-data">
       ...
           <span class="portletBottomLeft"></span>
           <span class="portletBottomRight"></span>
         </dd>
        </dl>...
